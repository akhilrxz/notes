 			submittted by : AKHIL-R   (rtc2023mca015)
			MCA rathinam technical campus
				
	




				SUMMARY OF CODE BELOW

Macro Definitions:

PERIPH_BASE: Base address of the peripheral registers.
AHB1PERIPH_OFFSET: Offset for AHB1 peripherals.
AHB1PERIPH_BASE: Base address for AHB1 peripherals.
GPIOA_OFFSET: Offset for GPIOA.
GPIOA_BASE: Base address for GPIOA.
RCC_OFFSET: Offset for RCC (Reset and Clock Control).
RCC_BASE: Base address for RCC.
AHB1EN_R_OFFSET: Offset for AHB1 enable register in RCC.
RCC_AHB1EN_R: Register to enable clock access to GPIOA.
MODE_R_OFFSET: Offset for mode register in GPIOA.
GPIOA_MODE_R: Register to configure the mode of GPIOA pins.
OD_R_OFFSET: Offset for output drive register in GPIOA.
GPIOA_OD_R: Register to control the output drive of GPIOA pins.
GPIOAEN: Bit mask to enable clock access to GPIOA.
PIN5: Bit mask for Pin 5 of GPIOA.
LED_PIN: Alias for PIN5.
Main Function:

RCC_AHB1EN_R |= GPIOAEN;: Enable clock access to GPIOA.
GPIOA_MODE_R |= (1U << 10);: Set Pin 5 as an output by setting bit 10.
GPIOA_MODE_R &= ~(1U << 11);: Clear bit 11 to configure Pin 5 as an output.
The main loop toggles the state of Pin 5 (LED) in an infinite loop, creating a blinking effect.
Comments:

Some commented out lines suggest that the original author might have experimented with setting the Pin 5 high and toggling it.
Infinite Loop:

The main loop toggles the state of Pin 5 using GPIOA_OD_R ^= LED_PIN;.
There is a delay loop (for(int i=0;i<100000;i++){};) to control the blinking speed.
			





























				CODE



			//Where is the led connected?
//Port:  A
//Pin:   5

#define PERIPH_BASE				(0x40000000UL)
#define AHB1PERIPH_OFFSET			(0x00020000UL)
#define AHB1PERIPH_BASE	        		(PERIPH_BASE + AHB1PERIPH_OFFSET)
#define GPIOA_OFFSET				(0x0000UL)

#define GPIOA_BASE				(AHB1PERIPH_BASE + GPIOA_OFFSET)

#define RCC_OFFSET				(0x3800UL)
#define RCC_BASE				(AHB1PERIPH_BASE + RCC_OFFSET)


#define AHB1EN_R_OFFSET				(0x30UL)
#define RCC_AHB1EN_R            		(*(volatile unsigned int *)(RCC_BASE +  AHB1EN_R_OFFSET))

#define MODE_R_OFFSET				(0x00UL)
#define GPIOA_MODE_R				(*(volatile unsigned int *)(GPIOA_BASE + MODE_R_OFFSET))


#define OD_R_OFFSET				(0x14UL)
#define GPIOA_OD_R				(*(volatile unsigned int *)(GPIOA_BASE +  OD_R_OFFSET))


#define  GPIOAEN				(1U<<0) //   0b 0000 0000 0000 0000 0000 0000 0000 0001

#define PIN5					(1U<<5)
#define LED_PIN					 PIN5






/*
 * (1U<<10)  // Set bit 10 to 1
 *  &=~(1U<<11) //  Set bit 11 to 0*/




int main(void)
{
	/*1. Enable clock access to GPIOA*/
	RCC_AHB1EN_R  |=  GPIOAEN;

	/*2.Set PA5 as output pin*/
	GPIOA_MODE_R  |= (1U<<10);  // Set bit 10 to 1
	GPIOA_MODE_R  &=~(1U<<11); //  Set bit 11 to 0

	while(1)
	{
		/*3.Set PA5 high*/
		//GPIOA_OD_R |= LED_PIN;

		/*4:Experiment 2 : toggle PA5*/
		GPIOA_OD_R ^= LED_PIN;
		for(int i=0;i<100000;i++){}

	}
}



			



